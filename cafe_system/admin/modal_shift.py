# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'modal_shift.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import bd

class Ui_createShiftModal(object):
    def setupUi(self, createShiftModal):
        self.main= createShiftModal
        createShiftModal.setObjectName("createShiftModal")
        createShiftModal.resize(975, 713)
        self.modalStaff = QtWidgets.QFrame(createShiftModal)
        self.modalStaff.setGeometry(QtCore.QRect(0, -10, 991, 731))
        self.modalStaff.setAutoFillBackground(True)
        self.modalStaff.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.modalStaff.setFrameShadow(QtWidgets.QFrame.Raised)
        self.modalStaff.setObjectName("modalStaff")
        self.dateInput = QtWidgets.QLineEdit(self.modalStaff)
        self.dateInput.setGeometry(QtCore.QRect(130, 450, 291, 41))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(14)
        self.dateInput.setFont(font)
        self.dateInput.setStyleSheet("border: 1px solid rgb(153, 102, 51);")
        self.dateInput.setInputMethodHints(QtCore.Qt.ImhNone)
        self.dateInput.setText("")
        self.dateInput.setObjectName("dateInput")
        self.dateInput.setInputMask("9999-99-99")
        self.endDateInput = QtWidgets.QLineEdit(self.modalStaff)
        self.endDateInput.setGeometry(QtCore.QRect(130, 530, 291, 41))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(14)
        self.endDateInput.setFont(font)
        self.endDateInput.setStyleSheet("border: 1px solid rgb(153, 102, 51);")
        self.endDateInput.setInputMethodHints(QtCore.Qt.ImhNone)
        self.endDateInput.setText("")
        self.endDateInput.setInputMask("90:00:00")
        self.endDateInput.setObjectName("endDateInput")
        self.startDateInput = QtWidgets.QLineEdit(self.modalStaff)
        self.startDateInput.setGeometry(QtCore.QRect(560, 450, 291, 41))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(14)
        self.startDateInput.setFont(font)
        self.startDateInput.setInputMask("90:00:00")
        self.startDateInput.setStyleSheet("border: 1px solid rgb(153, 102, 51);")
        self.startDateInput.setInputMethodHints(QtCore.Qt.ImhNone)
        self.startDateInput.setText("")
        self.startDateInput.setObjectName("startDateInput")
        self.icon = QtWidgets.QLabel(self.modalStaff)
        self.icon.setGeometry(QtCore.QRect(370, 60, 251, 291))
        self.icon.setText("")
        self.icon.setTextFormat(QtCore.Qt.RichText)
        self.icon.setPixmap(QtGui.QPixmap(":assets/icon.png"))
        self.icon.setScaledContents(True)
        self.icon.setObjectName("icon")
        self.saveShiftModalButton = QtWidgets.QPushButton(self.modalStaff)
        self.saveShiftModalButton.setGeometry(QtCore.QRect(130, 620, 291, 41))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(14)
        self.saveShiftModalButton.setFont(font)
        self.saveShiftModalButton.setAutoFillBackground(False)
        self.saveShiftModalButton.setStyleSheet("background-color: rgb(153, 102, 51);")
        self.saveShiftModalButton.setAutoDefault(False)
        self.saveShiftModalButton.setObjectName("saveShiftModalButton")
        self.saveShiftModalButton.clicked.connect(self.saveShift)
        self.cancelShiftModalButton = QtWidgets.QPushButton(self.modalStaff)
        self.cancelShiftModalButton.setGeometry(QtCore.QRect(560, 620, 291, 41))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(14)
        self.cancelShiftModalButton.setFont(font)
        self.cancelShiftModalButton.setAutoFillBackground(False)
        self.cancelShiftModalButton.setStyleSheet("background-color: rgb(153, 102, 51);")
        self.cancelShiftModalButton.setAutoDefault(False)
        self.cancelShiftModalButton.setObjectName("cancelShiftModalButton")
        self.chooseStaff = QtWidgets.QComboBox(self.modalStaff)
        self.chooseStaff.setGeometry(QtCore.QRect(560, 530, 291, 41))
        font = QtGui.QFont()
        font.setFamily("Sans Serif Collection")
        font.setPointSize(14)
        self.chooseStaff.setFont(font)
        self.chooseStaff.setStyleSheet("border: 1px solid rgb(153, 102, 51);")
        self.chooseStaff.setEditable(True)
        self.chooseStaff.setObjectName("chooseStaff")
        self.chooseStaff.setCurrentIndex(-1)

        self.retranslateUi(createShiftModal)
        self.saveShiftModalButton.clicked.connect(createShiftModal.close) # type: ignore
        self.cancelShiftModalButton.clicked.connect(createShiftModal.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(createShiftModal)

    def retranslateUi(self, createShiftModal):
        _translate = QtCore.QCoreApplication.translate
        createShiftModal.setWindowTitle(_translate("createShiftModal", "Создание смены"))
        self.dateInput.setPlaceholderText(_translate("createShiftModal", "Введите дату"))
        self.endDateInput.setPlaceholderText(_translate("createShiftModal", "Введите конец"))
        self.startDateInput.setPlaceholderText(_translate("createShiftModal", "Введите начало"))
        self.saveShiftModalButton.setText(_translate("createShiftModal", "Сохранить"))
        self.cancelShiftModalButton.setText(_translate("createShiftModal", "Отмена"))
        self.chooseStaff.setCurrentText(_translate("createShiftModal", "Выберете сотрудников"))
    
    def loadStaffInComboBox(self):
        connection = bd.connectBd()
        cursor = connection.cursor()
        cursor.execute("SELECT CONCAT(staff.staff_id,' ',staff.staff_fam,' ',staff.staff_name,' ',Staff_role.name,' ',Staff_status.name) as data from staff join Staff_role on staff.role = Staff_role.role_id LEFT JOIN Staff_status on staff.status=Staff_status.status_id;")
        data_shift = cursor.fetchall()
        for row_number, row_data in enumerate(data_shift):
                self.chooseStaff.addItem("")
                self.chooseStaff.setItemText(row_number,str(row_data['data']))
        connection.close()
    
    def saveShift(self):
        connection = bd.connectBd()
        cursor = connection.cursor()
        date = self.dateInput.text()
        print(date)
        start = self.startDateInput.text()
        print(start)
        end = self.endDateInput.text()
        print(end)
        staff_id = self.chooseStaff.itemText(self.chooseStaff.currentIndex())[0]
        print(staff_id)
        cursor.execute("INSERT INTO `work_shift` (`shift_id`, `date`, `start`, `stop`) VALUES (NULL, '{}', '{}', '{}');".format(date,start,end))
        connection.commit()
        if staff_id != '':
             cursor.execute("UPDATE Staff SET work_shift = (SELECT work_shift.shift_id FROM work_shift WHERE work_shift.date = '{}') WHERE staff_id = {} ;".format(date,staff_id))
        connection.commit()
        connection.close()
        self.main.close

